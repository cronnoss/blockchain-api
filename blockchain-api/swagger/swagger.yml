basePath: /v1
definitions:
    Body:
        description: |-
            Body is a simple (mutable, non-safe) data container for storing and moving
            a block's data contents (transactions and uncles) together.
        properties:
            Transactions:
                items:
                    $ref: '#/definitions/Transaction'
                type: array
            Uncles:
                items:
                    $ref: '#/definitions/Header'
                type: array
            Withdrawals:
                items:
                    $ref: '#/definitions/Withdrawal'
                type: array
        type: object
        x-go-package: github.com/ethereum/go-ethereum/core/types
    Header:
        properties:
            baseFeePerGas:
                description: BaseFee was added by EIP-1559 and is ignored in legacy headers.
                type: string
                x-go-name: BaseFee
            blobGasUsed:
                description: BlobGasUsed was added by EIP-4844 and is ignored in legacy headers.
                format: uint64
                type: integer
                x-go-name: BlobGasUsed
            difficulty:
                type: string
                x-go-name: Difficulty
            excessBlobGas:
                description: ExcessBlobGas was added by EIP-4844 and is ignored in legacy headers.
                format: uint64
                type: integer
                x-go-name: ExcessBlobGas
            extraData:
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: Extra
            gasLimit:
                format: uint64
                type: integer
                x-go-name: GasLimit
            gasUsed:
                format: uint64
                type: integer
                x-go-name: GasUsed
            logsBloom:
                type: string
                x-go-name: Bloom
            miner:
                type: string
                x-go-name: Coinbase
            mixHash:
                type: string
                x-go-name: MixDigest
            nonce:
                type: string
                x-go-name: Nonce
            number:
                type: string
                x-go-name: Number
            parentBeaconBlockRoot:
                description: ParentBeaconRoot was added by EIP-4788 and is ignored in legacy headers.
                type: string
                x-go-name: ParentBeaconRoot
            parentHash:
                type: string
                x-go-name: ParentHash
            receiptsRoot:
                type: string
                x-go-name: ReceiptHash
            sha3Uncles:
                type: string
                x-go-name: UncleHash
            stateRoot:
                type: string
                x-go-name: Root
            timestamp:
                format: uint64
                type: integer
                x-go-name: Time
            transactionsRoot:
                type: string
                x-go-name: TxHash
            withdrawalsRoot:
                description: WithdrawalsHash was added by EIP-4895 and is ignored in legacy headers.
                type: string
                x-go-name: WithdrawalsHash
        title: Header represents a block header in the Ethereum blockchain.
        type: object
        x-go-package: github.com/ethereum/go-ethereum/core/types
    Transaction:
        title: Transaction is an Ethereum transaction.
        type: object
        x-go-package: github.com/ethereum/go-ethereum/core/types
    Withdrawal:
        properties:
            address:
                type: string
                x-go-name: Address
            amount:
                format: uint64
                type: integer
                x-go-name: Amount
            index:
                format: uint64
                type: integer
                x-go-name: Index
            validatorIndex:
                format: uint64
                type: integer
                x-go-name: Validator
        title: Withdrawal represents a validator withdrawal from the consensus layer.
        type: object
        x-go-package: github.com/ethereum/go-ethereum/core/types
    block:
        properties:
            Body:
                $ref: '#/definitions/Body'
            Header:
                $ref: '#/definitions/Header'
        title: Block is an Ethereum block as returned by Ethereum client.
        type: object
        x-go-name: Block
        x-go-package: github.com/cronnoss/blockchain-api/blockchain-api/internal/pkg/models
    blockNoBody:
        properties:
            Header:
                $ref: '#/definitions/Header'
        title: BlockNoBody is an Ethereum block with header only as returned by Ethereum client.
        type: object
        x-go-name: BlockNoBody
        x-go-package: github.com/cronnoss/blockchain-api/blockchain-api/internal/pkg/models
    error:
        properties:
            error:
                description: The error message
                type: string
                x-go-name: Error
        required:
            - error
        title: Error is a generic error returned in API response.
        type: object
        x-go-name: Error
        x-go-package: github.com/cronnoss/blockchain-api/blockchain-api/internal/pkg/models
    group:
        properties:
            Indexes:
                example:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                items:
                    format: int64
                    type: integer
                type: array
            Name:
                example: DeFi Indexes
                type: string
        title: Group is a contract group.
        type: object
        x-go-name: Group
        x-go-package: github.com/cronnoss/blockchain-api/blockchain-api/internal/pkg/models
    groupIDs:
        properties:
            group_ids:
                example:
                    - 12
                    - 13
                items:
                    format: int64
                    type: integer
                type: array
                x-go-name: GroupIDs
        title: Groups holds a list of group IDs.
        type: object
        x-go-name: Groups
        x-go-package: github.com/cronnoss/blockchain-api/blockchain-api/internal/pkg/models
    index:
        properties:
            EthPriceInWei:
                example: 150000000000000000
                format: int64
                type: integer
            Name:
                example: DeFi Index (1)
                type: string
            PercentageChange:
                example: -45
                format: int64
                type: integer
            UsdCapitalization:
                example: 250000000
                format: int64
                type: integer
            UsdPriceInCents:
                example: 9500
                format: int64
                type: integer
        title: Index is a contract index.
        type: object
        x-go-name: Index
        x-go-package: github.com/cronnoss/blockchain-api/blockchain-api/internal/pkg/models
host: localhost
info:
    description: |-
        API-server for blockchain indexes.

        Group and index data are taken from a smart contract, which is deployed on Sepolia (ETH test network) using go-ethereum.
        For connecting to a smart contract you have to create your own Alchemy API key (see ALCHEMY_ENDPOINT env var)
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0
    title: Blockchain API.
    version: 0.0.1
paths:
    /blocks/:id:
        get:
            description: |-
                Returns block by ID which can be block number, block hash or "latest".
                Block hash is identified as "0x...".
            operationId: getBlock
            produces:
                - application/json
            responses:
                "200":
                    description: block
                    schema:
                        $ref: '#/definitions/block'
                "400":
                    description: error
                    schema:
                        $ref: '#/definitions/error'
                default:
                    description: error
                    schema:
                        $ref: '#/definitions/error'
            schemes:
                - http
            summary: Returns block info from Sepolia.
            tags:
                - blocks
    /blocks/:id/header:
        get:
            description: |-
                Returns block header by ID which can be block number, block hash or "latest".
                Block hash is identified as "0x...".
            operationId: getBlockHeader
            produces:
                - application/json
            responses:
                "200":
                    description: blockNoBody
                    schema:
                        $ref: '#/definitions/blockNoBody'
                "400":
                    description: error
                    schema:
                        $ref: '#/definitions/error'
                default:
                    description: error
                    schema:
                        $ref: '#/definitions/error'
            schemes:
                - http
            summary: Returns block info from Sepolia (header only).
            tags:
                - blocks
    /groups:
        get:
            description: This will show all available contract groups.
            operationId: getGroups
            produces:
                - application/json
            responses:
                "200":
                    description: groupIDs
                    schema:
                        $ref: '#/definitions/groupIDs'
                "400":
                    description: error
                    schema:
                        $ref: '#/definitions/error'
                default:
                    description: error
                    schema:
                        $ref: '#/definitions/error'
            schemes:
                - http
            summary: Lists all contract groups.
            tags:
                - groups
    /groups/:id:
        get:
            description: This will show name and indexes for a smart contract group with provided ID (if any).
            operationId: getGroup
            produces:
                - application/json
            responses:
                "200":
                    description: group
                    schema:
                        $ref: '#/definitions/group'
                "400":
                    description: error
                    schema:
                        $ref: '#/definitions/error'
                default:
                    description: error
                    schema:
                        $ref: '#/definitions/error'
            schemes:
                - http
            summary: Returns contract group info.
            tags:
                - groups
    /indexes/:id:
        get:
            description: This will show contract index info.
            operationId: getIndex
            produces:
                - application/json
            responses:
                "200":
                    description: index
                    schema:
                        $ref: '#/definitions/index'
                "400":
                    description: error
                    schema:
                        $ref: '#/definitions/error'
                default:
                    description: error
                    schema:
                        $ref: '#/definitions/error'
            schemes:
                - http
            summary: Lists contract index info.
            tags:
                - indexes
produces:
    - application/json
schemes:
    - http
swagger: "2.0"
